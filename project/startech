#!/bin/sh

[ -z "$1" ] || [ -z "$2" ] && { echo "Usage: $0 <host> <mac>"; exit 1; }
[ -f ssh.key ] && [ -f base.img ] || { echo "Run setup script first"; exit 1; }

[ -f "$1.img" ] || {
	echo "Setting up new ECH host '$1'..."
	cp base.img $1.img || exit 1
	debvm-run -i $1.img -s 2222 -g -- -display none &
	debvm-waitssh 2222 || exit 1
	ssh -i ssh.key -p 2222 -o NoHostAuthenticationForLocalhost=yes root@127.0.0.1 "
	hostnamectl set-hostname $1
	sed -i 's/base/$1/g' /etc/hosts

	mkdir ech
	openssl ech -public_name $1.example.com -pemout ech/$1.pem
	ech=\$(cat ech/$1.pem | tail -2 | head -1 | base64 -d | xxd -ps -c 200 | tr -d '\\n')
	echo 0001000005\$(printf '%04x' \$((\${#ech}/2)))\$ech > ech/$1.rr

	# TODO: ip argument
	mkdir -p /etc/systemd/resolved.conf.d
	cat <<EOF > /etc/systemd/resolved.conf.d/dns.conf
[Resolve]
DNS=172.20.189.68
FallbackDNS=172.20.189.68
EOF

	# TODO: broken
	apt install --assume-yes nginx-light=1.24.0-2.1~1.gbp4eef3c
	rm /etc/nginx/sites-enabled/default
	cp /etc/nginx/sites-available/default /etc/nginx/sites-enabled/$1.example.conf
	sed -i 's/server_name _;/server_name $1.example.com;/' /etc/nginx/sites-enabled/$1.example.conf
	echo 'ssl_echkeydir \$HOME/ech;' >> /etc/nginx/sites-enabled/$1.example.conf
	cp /etc/nginx/sites-available/default /etc/nginx/sites-enabled/hidden.$1.example.conf
	sed -i -e 's/server_name _;/server_name hidden.$1.example.com;/' -e sed 's/\\(listen.*\\)default_server;/\\1;/' /etc/nginx/sites-enabled/hidden.$1.example.conf

	# TODO: self sign certificates

	shutdown now" || exit 1
	wait
}

echo "Starting ECH host '$1'..."
# TODO: net1 breaks internet gateway sometimes
TERM=xterm-256color debvm-run -i "$1.img" -- \
	-device virtio-net-pci,netdev=net2,mac="$2" \
	-netdev bridge,id=net2,br=br0
